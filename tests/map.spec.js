import { addOneLineToMap, checkLegalBoxInMap } from "../src/game/map";
import { Box } from "../src/game/Box";
describe("map", () => {
  describe("addOneLineToMap", () => {
    it("一个都没有的时候", () => {
      const map = [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
      ];

      addOneLineToMap(map);

      expect(map).toEqual([
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [-2, -2, -2, -2],
      ]);
    });
    it("第一行有值", () => {
      const map = [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, -2, 0, 0],
      ];

      addOneLineToMap(map);

      expect(map).toEqual([
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, -2, 0, 0],
        [-2, -2, -2, -2],
      ]);
    });
    it("在中间", () => {
      const map = [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, -2, 0, 0],
        [0, -2, -2, 0],
      ];

      addOneLineToMap(map);

      expect(map).toEqual([
        [0, 0, 0, 0],
        [0, -2, 0, 0],
        [0, -2, -2, 0],
        [-2, -2, -2, -2],
      ]);
    });
  });

  describe("checkLegalBoxInMap", () => {
    test("right border", () => {
      const map = [
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, -1, -1, -1, -1],
      ];

      const box = new Box({ x: 8, y: 5 });
      box.setShape([
        [0, 0, 0, 0],
        [7, 7, 7, 7],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
      ]);

      expect(checkLegalBoxInMap(box, map)).toBe(true);
    });

    test("left box", () => {
      const map = [
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1, 0, 0, 0, 0, -1, -1, -1, -1],
      ];

      const box = new Box({ x: 1, y: 5 });
      box.setShape([
        [0, 0, 0, 0],
        [7, 7, 7, 7],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
      ]);

      expect(checkLegalBoxInMap(box, map)).toBe(true);
    });
  });
});
